{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-0fb49cd10dd7c20b56e1ec9223a089df",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getParagraphText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8f102680f495071b15f5dc9c238a6233",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "initializeApp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "platform",
                        "type": "Platform"
                    },
                    {
                        "name": "splashScreen",
                        "type": "SplashScreen"
                    },
                    {
                        "name": "statusBar",
                        "type": "StatusBar"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "platform",
                        "type": "Platform",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "splashScreen",
                        "type": "SplashScreen",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "statusBar",
                        "type": "StatusBar",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-47f14eae7e5b088901bf5cfb5f04dd11",
            "file": "src/app/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 35
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 15
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 27,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n\n\n@Component({\n  selector: 'storybook-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button_class {\n    margin: 8px;\n}",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            },
            "templateData": "<ion-item>\n    <button class=\"button_class\" mat-button type=\"button\" (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n    {{ label }}\n</button>\n</ion-item>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-5eb07e04b817e8ccde780f3cc44e6789",
            "file": "src/app/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.css"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "height",
                    "line": 24,
                    "type": "number"
                },
                {
                    "name": "image",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "width",
                    "line": 22,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { NgModule, Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.css'],\n})\nexport default class CardComponent  {\n\n  constructor() { }\n  @Input()\n  backgroundColor?: string;\n  @Input()\n  image?: string;\n  @Input()\n  width?: number;\n  @Input()\n  height?: number;\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\n    margin: 10px;\n}\n\n.content {\n    text-align: center;\n    position: relative;\n}\n\n.label {\n    text-align: center;\n}\n\n.button {\n    font-style: blueviolet;\n    align-items: flex-end;\n}",
                    "styleUrl": "./card.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "templateData": "<ion-card>\n    <ion-item>\n        <ion-icon name=\"pin\" slot=\"start\"></ion-icon>\n\n        <ion-label class=\"label\">Example headline for study</ion-label>\n\n    </ion-item>\n    <ion-card-content class=\"content\">\n        <img [src]=\"image\" alt=\"some Picture\" [width]=\"width\" [height]=\"height\"> <br> There is the describtion of the study.\n        <storybook-button mat-button class=\"button\" slot=\"end\"></storybook-button>\n    </ion-card-content>\n</ion-card>"
        },
        {
            "name": "DialogElementsExample",
            "id": "component-DialogElementsExample-dee9d60fa5a98ff25d81eb2e8306167c",
            "file": "src/app/dialog/dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog",
            "styleUrls": [
                "./dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialogButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialogButton.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogElementsExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    this.dialog.open(DialogElementsExampleDialog);\n  }\n}\n\n\n@Component({\n  selector: 'dialog-component',\n  templateUrl: './dialog.component.html',\n})\nexport class DialogElementsExampleDialog {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-item>\n    <button mat-button (click)=\"openDialog()\">Launch dialog</button>\n</ion-item>"
        },
        {
            "name": "DialogElementsExampleDialog",
            "id": "component-DialogElementsExampleDialog-dee9d60fa5a98ff25d81eb2e8306167c",
            "file": "src/app/dialog/dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dialog-component",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialogButton.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogElementsExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    this.dialog.open(DialogElementsExampleDialog);\n  }\n}\n\n\n@Component({\n  selector: 'dialog-component',\n  templateUrl: './dialog.component.html',\n})\nexport class DialogElementsExampleDialog {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<h1 mat-dialog-title>Dialog with elements</h1>\n<div mat-dialog-content>This dialog showcases the title, close, content and actions elements.</div>\n<div mat-dialog-actions>\n    <button mat-button mat-dialog-close>Close</button>\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/app/storybook_example_header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomePage",
            "id": "component-HomePage-730c4e331df8d63b2bad73d064b75629",
            "file": "src/app/home/home.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "home.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "home.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "panelOpenState",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport default class HomePage {\npublic panelOpenState = true;\n  constructor() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#container {\n    text-align: center;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n#container strong {\n    font-size: 20px;\n    line-height: 26px;\n}\n\n#container p {\n    font-size: 16px;\n    line-height: 22px;\n    color: #8c8c8c;\n    margin: 0;\n}\n\n#container a {\n    text-decoration: none;\n}",
                    "styleUrl": "home.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<ion-header [translucent]=\"true\">\n\n    <app-ion-menu></app-ion-menu>\n\n    <ion-toolbar>\n\n        <div layout=\"row\" layout-align=\"start center\">\n            <ion-buttons slot=\"start\">\n                <ion-menu-button menu=\"custom\" autoHide=\"false\"></ion-menu-button>\n            </ion-buttons>\n\n\n            <ion-title>\n                Study\n            </ion-title>\n            <storybookInput></storybookInput>\n            <app-dialog></app-dialog>\n\n            <h4>Expansion Panel</h4>\n\n            <mat-accordion>\n                <mat-expansion-panel>\n                    <mat-expansion-panel-header>\n                        <mat-panel-title>\n                            Personal data\n                        </mat-panel-title>\n                        <mat-panel-description>\n                            Type your name and age\n                        </mat-panel-description>\n                    </mat-expansion-panel-header>\n                    Panel Content\n                </mat-expansion-panel>\n                <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title>\n                            Self aware panel\n                        </mat-panel-title>\n                        <mat-panel-description>\n                            Currently I am {{panelOpenState ? 'open' : 'closed'}}\n                        </mat-panel-description>\n                    </mat-expansion-panel-header>\n                    <p>I'm visible because I am open</p>\n                </mat-expansion-panel>\n            </mat-accordion>\n\n            <h4>Datepicker</h4>\n\n            <mat-form-field>\n                <mat-label>Choose a date</mat-label>\n                <input matInput [matDatepicker]=\"picker\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n        </div>\n\n    </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\" class=\"ion-padding\">\n\n    <ion-list>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n        <app-card></app-card>\n    </ion-list>\n\n\n\n\n\n</ion-content>"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-06e664d2096e43a75eef14d1227825da",
            "file": "src/app/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybookInput",
            "styleUrls": [
                "./input.css"
            ],
            "styles": [],
            "template": "<ion-item>\n<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>{{ label }}</mat-label>\n    <input matInput [placeholder]=placeholder [value]=value>\n  </mat-form-field>\n</form>\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'string'",
                    "line": 27
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'string'",
                    "line": 25
                },
                {
                    "name": "value",
                    "defaultValue": "'string'",
                    "line": 29
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\n\n// This default export determines where your story goes in the story list\n@Component({\n  selector: 'storybookInput',\n  template: `\n    <ion-item>\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>{{ label }}</mat-label>\n        <input matInput [placeholder]=placeholder [value]=value>\n      </mat-form-field>\n    </form>\n    </ion-item>\n    `,\n  styleUrls: ['./input.css'],\n})\nexport default class InputComponent {\n    @Input()\n    placeholder?= 'string';\n    @Input()\n    label ?= 'string';\n    @Input()\n    value?= 'string'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-full-width {\n    margin: 10px;\n}",
                    "styleUrl": "./input.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IonCheckboxComponent",
            "id": "component-IonCheckboxComponent-d1e716967035577c9a1e02c80dc3d828",
            "file": "src/app/ion-checkbox/ion-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ion-checkbox",
            "styleUrls": [
                "./ion-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ion-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "line": 15
                },
                {
                    "name": "color",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 18
                },
                {
                    "name": "label",
                    "defaultValue": "'string'",
                    "line": 12
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ion-checkbox',\n  templateUrl: './ion-checkbox.component.html',\n  styleUrls: ['./ion-checkbox.component.scss'],\n})\nexport default class IonCheckboxComponent {\n\n  constructor() { }\n  @Input()\n  label? = 'string';\n  \n  @Input()\n  checked? = false;\n\n  @Input()\n  disabled? = false;\n\n\n  @Input()\n  color?: string;\n\n\n  \n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host::ng-deep.mat-checkbox-layout {\n    white-space: normal !important;\n}\n\n :host::ng-deep.mat-checkbox-inner-container {\n    margin-top: 4px;\n}",
                    "styleUrl": "./ion-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "templateData": "<ion-item>\n    <div id='check'>\n        <mat-checkbox class=\"example-margin\" [color]=color [checked]=checked [disabled]=disabled> {{ label }} </mat-checkbox>\n    </div>\n</ion-item>"
        },
        {
            "name": "IonDate",
            "id": "component-IonDate-c2172e8a1f1915374e60257f280d2990",
            "file": "src/app/ion-datetime/ion-datetime.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ion-datetime",
            "styleUrls": [
                "./ion-datetime.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ion-datetime.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new FormControl(new Date())",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-ion-datetime',\n  templateUrl: './ion-datetime.component.html',\n  styleUrls: ['./ion-datetime.component.scss'],\n})\nexport default class IonDate  {\n\n  date = new FormControl(new Date());\n\n  @Input()\n    label?: string;\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ion-datetime.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ion-item>\n    <mat-form-field appearance=\"fill\" class=\"example-form-field\">\n        <mat-label>Enter a date range</mat-label>\n        <mat-date-range-input [rangePicker]=\"rangePicker\">\n            <input matStartDate placeholder=\"Start date\">\n            <input matEndDate placeholder=\"End date\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #rangePicker>\n            <mat-date-range-picker-actions>\n                <button mat-button matDateRangePickerCancel>Cancel</button>\n                <button mat-raised-button color=\"primary\" matDateRangePickerApply>Apply</button>\n            </mat-date-range-picker-actions>\n        </mat-date-range-picker>\n    </mat-form-field>\n</ion-item>"
        },
        {
            "name": "IonMenuComponent",
            "id": "component-IonMenuComponent-4b2e6dabbc93756a4375a1ed4adb428a",
            "file": "src/app/ion-menu/ion-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ion-menu",
            "styleUrls": [
                "./ion-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ion-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openCustom",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "openEnd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "openFirst",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-ion-menu',\n  templateUrl: './ion-menu.component.html',\n  styleUrls: ['./ion-menu.component.scss'],\n})\nexport default class IonMenuComponent  {\n\n  constructor(private menu: MenuController) { }\n\n  openFirst() {\n    this.menu.enable(true, 'first');\n    this.menu.open('first');\n  }\n\n  openEnd() {\n    this.menu.open('end');\n  }\n\n  openCustom() {\n    this.menu.enable(true, 'custom');\n    this.menu.open('custom');\n  }\n}\n\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".my-custom-menu {\n    --width: 500px;\n}",
                    "styleUrl": "./ion-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "menu",
                        "type": "MenuController"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "menu",
                        "type": "MenuController",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-menu side=\"start\" menuId=\"custom\" contentId=\"main\" class=\"my-custom-menu\">\n    <ion-header>\n        <ion-toolbar color=\"tertiary\">\n            <ion-buttons slot=\"start\">\n                <ion-menu-button></ion-menu-button>\n            </ion-buttons>\n            <ion-title>Custom Menu</ion-title>\n        </ion-toolbar>\n    </ion-header>\n    <ion-content>\n\n        <ion-list>\n            <ion-menu-toggle auto-hide=\"false\">\n                <ion-item>Menu Item</ion-item>\n                <ion-item>Menu Item</ion-item>\n                <ion-item>Menu Item</ion-item>\n                <ion-item>Menu Item</ion-item>\n                <ion-item>Menu Item</ion-item>\n            </ion-menu-toggle>\n        </ion-list>\n    </ion-content>\n</ion-menu>\n<ion-router-outlet id=\"main\" main></ion-router-outlet>"
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-42a999c98e9c387efccfe3881c952aac",
            "file": "src/app/line-chart/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-line-chart",
            "styleUrls": [
                "./line-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./line-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "lineChartColors",
                    "defaultValue": "[\n    {\n      borderColor: 'black',\n      backgroundColor: 'rgba(38,47,133,0.3)',\n    },\n  ]",
                    "line": 33,
                    "type": "Color[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lineChartData",
                    "defaultValue": "[\n    { data: [85, 72, 78, 75, 77, 75], label: 'heart rate' },\n  ]",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "lineChartLabels",
                    "defaultValue": "['January', 'February', 'March', 'April', 'May', 'June']",
                    "type": "Label[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "lineChartLegend",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "lineChartOptions",
                    "defaultValue": "{\n    responsive: true,\n    scales : {\n      yAxes: [{\n          ticks: {\n            max : 100,\n            min : 50\n          }\n      }]\n    }\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "lineChartPlugins",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "lineChartType",
                    "defaultValue": "'line'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n})\nexport class LineChartComponent  {\n\n  constructor() { }\n\n  lineChartData: ChartDataSets[] = [\n    { data: [85, 72, 78, 75, 77, 75], label: 'heart rate' },\n  ];\n\n  lineChartLabels: Label[] = ['January', 'February', 'March', 'April', 'May', 'June'];\n\n  lineChartOptions = {\n    responsive: true,\n    scales : {\n      yAxes: [{\n          ticks: {\n            max : 100,\n            min : 50\n          }\n      }]\n    }\n  };\n\n  @Input()\n  lineChartColors: Color[] = [\n    {\n      borderColor: 'black',\n      backgroundColor: 'rgba(38,47,133,0.3)',\n    },\n  ];\n\n  lineChartLegend = true;\n  lineChartPlugins = [];\n  lineChartType = 'line';\n\n  \n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./line-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "templateData": "<div class=\"chart-wrapper\">\n    <canvas baseChart [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\" [options]=\"lineChartOptions\" [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" [chartType]=\"lineChartType\" [plugins]=\"lineChartPlugins\">\n  </canvas>\n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "src/app/storybook_example_header/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomePageModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "DialogElementsExample"
                        },
                        {
                            "name": "HomePage"
                        },
                        {
                            "name": "Input"
                        },
                        {
                            "name": "IonCheckboxComponent"
                        },
                        {
                            "name": "IonDate"
                        },
                        {
                            "name": "IonMenuComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomePageRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomePage"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomePageRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Checked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Checkbox.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Checkbox.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "any"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Checkbox.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/DatePicker.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Dialog.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Homepage.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/LineChart.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Card.stories.ts",
                "type": "Story<CardComponent>",
                "defaultValue": "(args) => ({\n  component: CardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Checkbox.stories.ts",
                "type": "Story<IonCheckboxComponent>",
                "defaultValue": "(args) => ({\n  component: IonCheckboxComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/DatePicker.stories.ts",
                "type": "Story<IonDate>",
                "defaultValue": "(args) => ({\n  component: IonDate,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Dialog.stories.ts",
                "type": "Story<DialogElementsExample>",
                "defaultValue": "(args) => ({\n  component: DialogElementsExample,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Homepage.stories.ts",
                "type": "Story<HomePage>",
                "defaultValue": "(args) => ({\n  component: HomePage,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Input.stories.ts",
                "type": "Story<Input>",
                "defaultValue": "(args) => ({\n  component: Input,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/LineChart.stories.ts",
                "type": "Story<LineChartComponent>",
                "defaultValue": "(args) => ({\n  component: LineChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Menu.stories.ts",
                "type": "Story<IonMenuComponent>",
                "defaultValue": "(args) => ({\n  component: IonMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
            },
            {
                "name": "WithoutImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Card.stories.ts",
                "type": "",
                "defaultValue": "() => ({\ntemplate: ` <ion-card>\n<ion-item>\n    <ion-icon name=\"pin\" slot=\"start\"></ion-icon>\n\n    <ion-label class=\"label\">Example headline for study</ion-label>\n    \n</ion-item>\n<ion-card-content class=\"content\">\n     <br> There is the describtion of the study.\n     <storybook-button mat-button slot=\"end\"></storybook-button>\n\n</ion-card-content>\n</ion-card>`,\nstyleUrls: ['../card/card.css']\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/stories/Checkbox.stories.ts": [
                {
                    "name": "Checked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Checkbox.stories.ts",
                    "type": "Story<IonCheckboxComponent>",
                    "defaultValue": "(args) => ({\n  component: IonCheckboxComponent,\n  props: args,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Card.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Card.stories.ts",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args) => ({\n  component: CardComponent,\n  props: args,\n})"
                },
                {
                    "name": "WithoutImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Card.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\ntemplate: ` <ion-card>\n<ion-item>\n    <ion-icon name=\"pin\" slot=\"start\"></ion-icon>\n\n    <ion-label class=\"label\">Example headline for study</ion-label>\n    \n</ion-item>\n<ion-card-content class=\"content\">\n     <br> There is the describtion of the study.\n     <storybook-button mat-button slot=\"end\"></storybook-button>\n\n</ion-card-content>\n</ion-card>`,\nstyleUrls: ['../card/card.css']\n})"
                }
            ],
            "src/app/stories/DatePicker.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/DatePicker.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/DatePicker.stories.ts",
                    "type": "Story<IonDate>",
                    "defaultValue": "(args) => ({\n  component: IonDate,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Dialog.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Dialog.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Dialog.stories.ts",
                    "type": "Story<DialogElementsExample>",
                    "defaultValue": "(args) => ({\n  component: DialogElementsExample,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Homepage.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Homepage.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Homepage.stories.ts",
                    "type": "Story<HomePage>",
                    "defaultValue": "(args) => ({\n  component: HomePage,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Input.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Input.stories.ts",
                    "type": "Story<Input>",
                    "defaultValue": "(args) => ({\n  component: Input,\n  props: args,\n})"
                }
            ],
            "src/app/stories/LineChart.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/LineChart.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/LineChart.stories.ts",
                    "type": "Story<LineChartComponent>",
                    "defaultValue": "(args) => ({\n  component: LineChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Menu.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Menu.stories.ts",
                    "type": "Story<IonMenuComponent>",
                    "defaultValue": "(args) => ({\n  component: IonMenuComponent,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "home",
                        "loadChildren": "./home/home.module#HomePageModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/home/home-routing.module.ts",
                                        "module": "HomePageRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "HomePage"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "HomePageModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "home",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/app/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogElementsExample",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogElementsExampleDialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ion-checkbox/ion-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IonCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/ion-datetime/ion-datetime.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IonDate",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/ion-menu/ion-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IonMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/line-chart/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/DatePicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/DatePicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Homepage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Homepage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/LineChart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/LineChart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/storybook_example_header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/storybook_example_header/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}