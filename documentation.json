{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-0fb49cd10dd7c20b56e1ec9223a089df",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getParagraphText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8f102680f495071b15f5dc9c238a6233",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "initializeApp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "platform",
                        "type": "Platform"
                    },
                    {
                        "name": "splashScreen",
                        "type": "SplashScreen"
                    },
                    {
                        "name": "statusBar",
                        "type": "StatusBar"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "platform",
                        "type": "Platform",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "splashScreen",
                        "type": "SplashScreen",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "statusBar",
                        "type": "StatusBar",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-482492358858de0d1c05eed1d15d38e6",
            "file": "src/app/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "color",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 25,
                    "type": "\"primary\" | \"accent\" | \"warn\""
                },
                {
                    "name": "disabled",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 39
                },
                {
                    "name": "type",
                    "line": 28,
                    "type": "\"basic\" | \"raised\" | \"stroke\" | \"flat\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 45,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n\n\n@Component({\n  selector: 'storybook-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  color: 'primary' | 'accent' | 'warn';\n\n  @Input()\n  type: 'basic' | 'raised' | 'stroke' | 'flat';\n\n  @Input()\n  disabled?: boolean;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button_class {\n    margin: 8px;\n}",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "templateData": "<ion-item>\n\n    <ng-template [ngIf]=\"type == 'basic'\">\n        <div>\n            <button class=\"button_class\" mat-button [disabled]=disabled [color]=color (click)=\"onClick.emit($event)\" [ngStyle]=\"{ 'background-color': backgroundColor }\"> {{ label }}\n            </button>\n        </div>\n    </ng-template>\n    <ng-template [ngIf]=\"type == 'raised'\">\n        <div>\n            <button class=\"button_class\" mat-raised-button [disabled]=disabled [color]=color (click)=\"onClick.emit($event)\" [ngStyle]=\"{ 'background-color': backgroundColor }\"> {{ label }}\n            </button>\n        </div>\n    </ng-template>\n    <ng-template [ngIf]=\"type == 'flat'\">\n        <div>\n            <button class=\"button_class\" mat-flat-button [disabled]=disabled [color]=color (click)=\"onClick.emit($event)\" [ngStyle]=\"{ 'background-color': backgroundColor }\"> {{ label }}\n            </button>\n        </div>\n    </ng-template>\n    <ng-template [ngIf]=\"type == 'stroke'\">\n        <div>\n            <button class=\"button_class\" mat-stroked-button [disabled]=disabled [color]=color (click)=\"onClick.emit($event)\" [ngStyle]=\"{ 'background-color': backgroundColor }\"> {{ label }}\n            </button>\n        </div>\n    </ng-template>\n</ion-item>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-abd53bfab478e41f72e6f8972e3363c0",
            "file": "src/app/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.css"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "headline",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "height",
                    "line": 23,
                    "type": "number"
                },
                {
                    "name": "image",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "mat_button",
                    "line": 31,
                    "type": "ButtonComponent"
                },
                {
                    "name": "showPicture",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "width",
                    "line": 21,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { NgModule, Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport ButtonComponent from '../button/button.component';\n\n\n\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.css'],\n})\nexport default class CardComponent  {\n\n  constructor() { }\n  @Input()\n  image?: string;\n  @Input()\n  width?: number;\n  @Input()\n  height?: number;\n  @Input()\n  headline?: string;\n  @Input()\n  description?: string;\n  @Input()\n  showPicture?: boolean;\n  @Input()\n  mat_button?: ButtonComponent;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\n    margin: 10px;\n    white-space: normal !important;\n}\n\n.content {\n    position: relative;\n}\n\n.picture {\n    text-align: center;\n}\n\n.button {\n    font-style: blueviolet;\n    float: right;\n}\n\n.label {\n    white-space: normal !important;\n}",
                    "styleUrl": "./card.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "templateData": "<ion-card>\n    <ion-item>\n        <button mat-icon-button slot=\"end\" aria-label=\"Example icon button with a heart icon\">\n            <mat-icon>star_border</mat-icon>\n            </button>\n\n        <mat-label class=\"label\" slot=\"start\">{{ headline }}</mat-label>\n\n    </ion-item>\n    <ion-card-content class=\"content\">\n        <ng-template [ngIf]=\"showPicture\">\n            <div style=\"text-align:center;\">\n                <img class=\"picture\" [src]=\"image\" alt=\"some Picture\" [width]=\"width\" [height]=\"height\">\n            </div>\n        </ng-template>\n        <br> {{description}}\n        <storybook-button mat-button class=\"button\"> </storybook-button>\n\n    </ion-card-content>\n</ion-card>"
        },
        {
            "name": "DialogElementsExample",
            "id": "component-DialogElementsExample-8a934a211db95a10d7f625f716cde7e6",
            "file": "src/app/dialog/dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog",
            "styleUrls": [
                "./dialog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialogButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "openDialog",
                    "line": 14
                }
            ],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialogButton.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogElementsExample {\n  constructor(public dialog: MatDialog) {}\n  \n\n  @Output()\n  openDialog() {\n    this.dialog.open(DialogElementsExampleDialog);\n  }\n  \n}\n\n\n\n\n@Component({\n  selector: 'dialog-component',\n  templateUrl: './dialog.component.html',\n})\nexport class DialogElementsExampleDialog {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-item>\n    <button mat-button (click)=\"openDialog()\">Launch dialog</button>\n</ion-item>"
        },
        {
            "name": "DialogElementsExampleDialog",
            "id": "component-DialogElementsExampleDialog-8a934a211db95a10d7f625f716cde7e6",
            "file": "src/app/dialog/dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dialog-component",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialogButton.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogElementsExample {\n  constructor(public dialog: MatDialog) {}\n  \n\n  @Output()\n  openDialog() {\n    this.dialog.open(DialogElementsExampleDialog);\n  }\n  \n}\n\n\n\n\n@Component({\n  selector: 'dialog-component',\n  templateUrl: './dialog.component.html',\n})\nexport class DialogElementsExampleDialog {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<h1 mat-dialog-title>Dialog with elements</h1>\n<div mat-dialog-content>This dialog showcases the title, close, content and actions elements.</div>\n<div mat-dialog-actions>\n    <button mat-button mat-dialog-close>Close</button>\n</div>"
        },
        {
            "name": "DoughnutChartComponent",
            "id": "component-DoughnutChartComponent-d03ab200be5c9842d8ec77408f1ae29d",
            "file": "src/app/doughnut-chart/doughnut-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-doughnut-chart",
            "styleUrls": [
                "./doughnut-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./doughnut-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dataArrayInput",
                    "line": 15,
                    "type": "number[]"
                },
                {
                    "name": "doughnutChartLegend",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "labelArray",
                    "line": 18,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartDatasets",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "chartLabels",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ChartPlugins",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.scss'],\n})\nexport class DoughnutChartComponent implements OnInit {\n\n  constructor() { }\n\n  public chartDatasets;\n  public chartLabels: string[];\n\n  @Input() dataArrayInput?: number[];\n  \n\n  @Input() labelArray?: string[];\n\n\n  //@Input() chartOptionsInput: any;\n\n  //@Input() lineChartColors: string;\n  @Input() doughnutChartLegend : boolean;\n  ChartPlugins = [];\n\n  ngOnInit(): void {\n    this.chartDatasets = \n       this.dataArrayInput\n    ;\n    \n\n    \n    this.chartLabels = this.labelArray;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./doughnut-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"chart-wrapper\">\n    <canvas baseChart [data]=\"chartDatasets\" [labels]=\"chartLabels\" chartType=\"doughnut\">\n</canvas>\n</div>"
        },
        {
            "name": "EmptyStatesComponent",
            "id": "component-EmptyStatesComponent-f16cdaadfd48671de8b252b01ae80274",
            "file": "src/app/empty-states/empty-states.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-empty-states",
            "styleUrls": [
                "./empty-states.css"
            ],
            "styles": [],
            "templateUrl": [
                "./empty-states.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alternative",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "emptyLabel",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "height",
                    "line": 21,
                    "type": "number"
                },
                {
                    "name": "image",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "src",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "type",
                    "line": 13,
                    "type": "\"studies\" | \"info\" | \"news\""
                },
                {
                    "name": "width",
                    "line": 19,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-states',\n  templateUrl: './empty-states.component.html',\n  styleUrls: ['./empty-states.css'],\n})\nexport class EmptyStatesComponent  {\n\n  constructor() { }\n  \n  @Input()\n  type: 'studies' | 'info' | 'news';\n\n  @Input()\n  emptyLabel?: string;\n\n  @Input()\n  width?: number;\n  @Input()\n  height?: number;\n  @Input()\n  image?: string;\n  @Input()\n  alternative: string;\n  @Input()\n  src: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".label {\n    text-align: center;\n    white-space: normal !important;\n}\n\n\n/*.content {\n    background-image: url('blabla.jpg');\n    background-color: transparent;\n    background-size: cover;\n    opacity: 0.6;\n}*/",
                    "styleUrl": "./empty-states.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "templateData": "<ion-item>\n    <ion-content padding class=\"content\" [ngStyle]=\"{ 'background-color': 'url(blabla.jpg)' }\">\n        <ng-template [ngIf]=\"type == 'studies'\">\n            <div style=\"text-align:center;\">\n\n                <br class=\"label\"> {{ emptyLabel}}\n            </div>\n        </ng-template>\n    </ion-content>\n</ion-item>"
        },
        {
            "name": "HomePage",
            "id": "component-HomePage-730c4e331df8d63b2bad73d064b75629",
            "file": "src/app/home/home.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "home.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "home.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "panelOpenState",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport default class HomePage {\npublic panelOpenState = true;\n  constructor() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#container {\n    text-align: center;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n#container strong {\n    font-size: 20px;\n    line-height: 26px;\n}\n\n#container p {\n    font-size: 16px;\n    line-height: 22px;\n    color: #8c8c8c;\n    margin: 0;\n}\n\n#container a {\n    text-decoration: none;\n}",
                    "styleUrl": "home.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<ion-header [translucent]=\"true\">\n\n    <app-ion-menu></app-ion-menu>\n\n    <ion-toolbar>\n\n        <div layout=\"row\" layout-align=\"start center\">\n            <ion-buttons slot=\"start\">\n                <ion-menu-button menu=\"custom\" autoHide=\"false\"></ion-menu-button>\n            </ion-buttons>\n\n\n            <ion-title>\n                Study\n            </ion-title>\n            <storybookInput></storybookInput>\n            <app-dialog></app-dialog>\n\n\n\n            <h4>Datepicker</h4>\n\n            <mat-form-field>\n                <mat-label>Choose a date</mat-label>\n                <input matInput [matDatepicker]=\"picker\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n        </div>\n\n    </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\" [scrollEvents]=\"true\">\n\n\n    <app-line-chart></app-line-chart>\n\n\n\n\n\n</ion-content>"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-06e664d2096e43a75eef14d1227825da",
            "file": "src/app/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybookInput",
            "styleUrls": [
                "./input.css"
            ],
            "styles": [],
            "template": "<ion-item>\n<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>{{ label }}</mat-label>\n    <input matInput [placeholder]=placeholder [value]=value>\n  </mat-form-field>\n</form>\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'string'",
                    "line": 27
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'string'",
                    "line": 25
                },
                {
                    "name": "value",
                    "defaultValue": "'string'",
                    "line": 29
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\n\n// This default export determines where your story goes in the story list\n@Component({\n  selector: 'storybookInput',\n  template: `\n    <ion-item>\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>{{ label }}</mat-label>\n        <input matInput [placeholder]=placeholder [value]=value>\n      </mat-form-field>\n    </form>\n    </ion-item>\n    `,\n  styleUrls: ['./input.css'],\n})\nexport default class InputComponent {\n    @Input()\n    placeholder?= 'string';\n    @Input()\n    label ?= 'string';\n    @Input()\n    value?= 'string'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-full-width {\n    margin: 10px;\n}",
                    "styleUrl": "./input.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IonCheckboxComponent",
            "id": "component-IonCheckboxComponent-d1e716967035577c9a1e02c80dc3d828",
            "file": "src/app/ion-checkbox/ion-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ion-checkbox",
            "styleUrls": [
                "./ion-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ion-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "line": 15
                },
                {
                    "name": "color",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 18
                },
                {
                    "name": "label",
                    "defaultValue": "'string'",
                    "line": 12
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ion-checkbox',\n  templateUrl: './ion-checkbox.component.html',\n  styleUrls: ['./ion-checkbox.component.scss'],\n})\nexport default class IonCheckboxComponent {\n\n  constructor() { }\n  @Input()\n  label? = 'string';\n  \n  @Input()\n  checked? = false;\n\n  @Input()\n  disabled? = false;\n\n\n  @Input()\n  color?: string;\n\n\n  \n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host::ng-deep.mat-checkbox-layout {\n    white-space: normal !important;\n}\n\n :host::ng-deep.mat-checkbox-inner-container {\n    margin-top: 4px;\n}",
                    "styleUrl": "./ion-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "templateData": "<ion-item>\n    <div id='check'>\n        <mat-checkbox class=\"example-margin\" [color]=color [checked]=checked [disabled]=disabled> {{ label }} </mat-checkbox>\n    </div>\n</ion-item>"
        },
        {
            "name": "IonDate",
            "id": "component-IonDate-c2172e8a1f1915374e60257f280d2990",
            "file": "src/app/ion-datetime/ion-datetime.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ion-datetime",
            "styleUrls": [
                "./ion-datetime.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ion-datetime.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "date",
                    "defaultValue": "new FormControl(new Date())",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-ion-datetime',\n  templateUrl: './ion-datetime.component.html',\n  styleUrls: ['./ion-datetime.component.scss'],\n})\nexport default class IonDate  {\n\n  date = new FormControl(new Date());\n\n  @Input()\n    label?: string;\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ion-datetime.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ion-item>\n    <mat-form-field appearance=\"fill\" class=\"example-form-field\">\n        <mat-label>Enter a date range</mat-label>\n        <mat-date-range-input [rangePicker]=\"rangePicker\">\n            <input matStartDate placeholder=\"Start date\">\n            <input matEndDate placeholder=\"End date\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #rangePicker>\n            <mat-date-range-picker-actions>\n                <button mat-button matDateRangePickerCancel>Cancel</button>\n                <button mat-raised-button color=\"primary\" matDateRangePickerApply>Apply</button>\n            </mat-date-range-picker-actions>\n        </mat-date-range-picker>\n    </mat-form-field>\n</ion-item>"
        },
        {
            "name": "IonMenuComponent",
            "id": "component-IonMenuComponent-4b2e6dabbc93756a4375a1ed4adb428a",
            "file": "src/app/ion-menu/ion-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ion-menu",
            "styleUrls": [
                "./ion-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ion-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openCustom",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "openEnd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "openFirst",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-ion-menu',\n  templateUrl: './ion-menu.component.html',\n  styleUrls: ['./ion-menu.component.scss'],\n})\nexport default class IonMenuComponent  {\n\n  constructor(private menu: MenuController) { }\n\n  openFirst() {\n    this.menu.enable(true, 'first');\n    this.menu.open('first');\n  }\n\n  openEnd() {\n    this.menu.open('end');\n  }\n\n  openCustom() {\n    this.menu.enable(true, 'custom');\n    this.menu.open('custom');\n  }\n}\n\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".my-custom-menu {\n    --width: 500px;\n}",
                    "styleUrl": "./ion-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "menu",
                        "type": "MenuController"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "menu",
                        "type": "MenuController",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-menu side=\"start\" menuId=\"custom\" contentId=\"main\" class=\"my-custom-menu\">\n    <ion-header>\n        <ion-toolbar color=\"tertiary\">\n            <ion-buttons slot=\"start\">\n                <ion-menu-button></ion-menu-button>\n            </ion-buttons>\n            <ion-title>Custom Menu</ion-title>\n        </ion-toolbar>\n    </ion-header>\n    <ion-content>\n\n        <ion-list>\n            <ion-menu-toggle auto-hide=\"false\">\n                <ion-item>Menu Item</ion-item>\n                <ion-item>Menu Item</ion-item>\n                <ion-item>Menu Item</ion-item>\n                <ion-item>Menu Item</ion-item>\n                <ion-item>Menu Item</ion-item>\n            </ion-menu-toggle>\n        </ion-list>\n    </ion-content>\n</ion-menu>\n<ion-router-outlet id=\"main\" main></ion-router-outlet>"
        },
        {
            "name": "LineChartComponent",
            "id": "component-LineChartComponent-acf14f157d5bc256ed6f947de41b4d03",
            "file": "src/app/line-chart/line-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-line-chart",
            "styleUrls": [
                "./line-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./line-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColorInput",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "borderColorInput",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "chartLabelInput",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "chartLegend",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "chartType",
                    "line": 19,
                    "type": "\"bar\" | \"line\" | \"doughnut\""
                },
                {
                    "name": "dataArrayInput",
                    "line": 22,
                    "type": "number[]"
                },
                {
                    "name": "labelArray",
                    "line": 30,
                    "type": "string[]"
                },
                {
                    "name": "maxInput",
                    "line": 25,
                    "type": "number"
                },
                {
                    "name": "minInput",
                    "line": 24,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartColors",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "chartDatasets",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "chartLabels",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "chartOptions",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "chartPlugins",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n})\nexport class LineChartComponent implements OnInit {\n\n  constructor() { }\n\n  public chartDatasets;\n  public chartLabels: string[];\n  public chartColors;\n  public chartOptions;\n\n  @Input() chartType: 'bar' | 'line' | 'doughnut';\n\n  @Input() chartLabelInput: string;\n  @Input() dataArrayInput?: number[];\n\n  @Input() minInput: number;\n  @Input() maxInput: number;\n\n  @Input() borderColorInput?: string;\n  @Input() backgroundColorInput?: string;\n\n  @Input() labelArray?: string[];\n\n\n  //@Input() chartOptionsInput: any;\n\n  //@Input() lineChartColors: string;\n  @Input() chartLegend: boolean;\n  chartPlugins = [];\n\n  ngOnInit(): void {\n    if (this.chartType == 'line' || 'bar') {\n      this.chartDatasets = [{\n        data: this.dataArrayInput,\n        label: this.chartLabelInput\n      }];\n      this.chartColors = [\n        {\n          borderColor: this.borderColorInput,\n          backgroundColor: this.backgroundColorInput,\n        },\n      ];\n\n      this.chartOptions = {\n        responsive: true,\n        scales: {\n          yAxes: [{\n            ticks: {\n              max: this.maxInput,\n              min: this.minInput\n            }\n          }]\n        }\n      };\n      this.chartLabels = this.labelArray;\n    }\n    else if (this.chartType == 'doughnut') {\n      this.chartDatasets = this.dataArrayInput;\n      this.chartLabels = this.labelArray;\n    }\n  }\n\n}\n\n\n\n\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./line-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-template [ngIf]=\"chartType == 'line'\">\n    <div class=\"chart-wrapper-line\">\n        <canvas baseChart [datasets]=\"chartDatasets\" [labels]=\"chartLabels\" [options]=\"chartOptions\" [colors]=\"chartColors\" [legend]=\"chartLegend\" [chartType]=\"chartType\" [plugins]=\"chartPlugins\">\n  </canvas>\n    </div>\n</ng-template>\n\n<ng-template [ngIf]=\"chartType == 'doughnut'\">\n    <div class=\"chart-wrapper-doughnut\">\n        <canvas baseChart [data]=\"chartDatasets\" [labels]=\"chartLabels\" chartType=\"doughnut\">\n</canvas>\n    </div>\n</ng-template>\n\n<ng-template [ngIf]=\"chartType == 'bar'\">\n    <div class=\"chart-wrapper-bar\">\n        <canvas baseChart [datasets]=\"chartDatasets\" [labels]=\"chartLabels\" [options]=\"chartOptions\" [colors]=\"chartColors\" [legend]=\"chartLegend\" chartType=\"bar\" [plugins]=\"chartPlugins\">\n</canvas>\n    </div>\n</ng-template>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomePageModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "DialogElementsExample"
                        },
                        {
                            "name": "DoughnutChartComponent"
                        },
                        {
                            "name": "EmptyStatesComponent"
                        },
                        {
                            "name": "HomePage"
                        },
                        {
                            "name": "Input"
                        },
                        {
                            "name": "IonCheckboxComponent"
                        },
                        {
                            "name": "IonDate"
                        },
                        {
                            "name": "IonMenuComponent"
                        },
                        {
                            "name": "LineChartComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomePageRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomePage"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomePageRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Bar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Chart.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Checked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Checkbox.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Checkbox.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Doughnut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Chart.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Line",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Chart.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "any"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Checkbox.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/DatePicker.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Dialog.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/EmptyStates.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Homepage.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Standard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Card.stories.ts",
                "type": "Story<CardComponent>",
                "defaultValue": "(args) => ({\n  component: CardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Chart.stories.ts",
                "type": "Story<LineChartComponent>",
                "defaultValue": "(args) => ({\n  component: LineChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Checkbox.stories.ts",
                "type": "Story<IonCheckboxComponent>",
                "defaultValue": "(args) => ({\n  component: IonCheckboxComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/DatePicker.stories.ts",
                "type": "Story<IonDate>",
                "defaultValue": "(args) => ({\n  component: IonDate,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Dialog.stories.ts",
                "type": "Story<DialogElementsExample>",
                "defaultValue": "(args) => ({\n  component: DialogElementsExample,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/EmptyStates.stories.ts",
                "type": "Story<EmptyStatesComponent>",
                "defaultValue": "(args) => ({\n  component: EmptyStatesComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Homepage.stories.ts",
                "type": "Story<HomePage>",
                "defaultValue": "(args) => ({\n  component: HomePage,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Input.stories.ts",
                "type": "Story<Input>",
                "defaultValue": "(args) => ({\n  component: Input,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Menu.stories.ts",
                "type": "Story<IonMenuComponent>",
                "defaultValue": "(args) => ({\n  component: IonMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "withoutPicture",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/stories/Card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/stories/Chart.stories.ts": [
                {
                    "name": "Bar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Chart.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Doughnut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Chart.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Line",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Chart.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Chart.stories.ts",
                    "type": "Story<LineChartComponent>",
                    "defaultValue": "(args) => ({\n  component: LineChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Checkbox.stories.ts": [
                {
                    "name": "Checked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Checkbox.stories.ts",
                    "type": "Story<IonCheckboxComponent>",
                    "defaultValue": "(args) => ({\n  component: IonCheckboxComponent,\n  props: args,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/stories/Button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Card.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Card.stories.ts",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args) => ({\n  component: CardComponent,\n  props: args,\n})"
                },
                {
                    "name": "withoutPicture",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/stories/DatePicker.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/DatePicker.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/DatePicker.stories.ts",
                    "type": "Story<IonDate>",
                    "defaultValue": "(args) => ({\n  component: IonDate,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Dialog.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Dialog.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Dialog.stories.ts",
                    "type": "Story<DialogElementsExample>",
                    "defaultValue": "(args) => ({\n  component: DialogElementsExample,\n  props: args,\n})"
                }
            ],
            "src/app/stories/EmptyStates.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/EmptyStates.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/EmptyStates.stories.ts",
                    "type": "Story<EmptyStatesComponent>",
                    "defaultValue": "(args) => ({\n  component: EmptyStatesComponent,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Homepage.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Homepage.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Homepage.stories.ts",
                    "type": "Story<HomePage>",
                    "defaultValue": "(args) => ({\n  component: HomePage,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Input.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Input.stories.ts",
                    "type": "Story<Input>",
                    "defaultValue": "(args) => ({\n  component: Input,\n  props: args,\n})"
                }
            ],
            "src/app/stories/Menu.stories.ts": [
                {
                    "name": "Standard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/stories/Menu.stories.ts",
                    "type": "Story<IonMenuComponent>",
                    "defaultValue": "(args) => ({\n  component: IonMenuComponent,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "home",
                        "loadChildren": "./home/home.module#HomePageModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/home/home-routing.module.ts",
                                        "module": "HomePageRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "HomePage"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "HomePageModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "home",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 57,
                "coverageCount": "4/7",
                "status": "good"
            },
            {
                "filePath": "src/app/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogElementsExample",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogElementsExampleDialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/doughnut-chart/doughnut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DoughnutChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/empty-states/empty-states.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyStatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ion-checkbox/ion-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IonCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/ion-datetime/ion-datetime.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IonDate",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/ion-menu/ion-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IonMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/line-chart/line-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LineChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withoutPicture",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Bar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Doughnut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Line",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/DatePicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/DatePicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/EmptyStates.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/EmptyStates.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Homepage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Homepage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Standard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}